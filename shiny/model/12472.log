conn=0xa7723a0, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0xa7723a0, query=' '
conn=0xa7723a0, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0xa7723a0, query='set DateStyle to 'ISO''
conn=0xa7723a0, query='set extra_float_digits to 2'
conn=0xa7723a0, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0xa7723a0, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0xa7723a0, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0xa7723a0, query='create extension postgis'
conn=0xa7723a0, query='create extension plr'
conn=0xa24b670, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0xa24b670, query=' '
conn=0xa24b670, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0xa24b670, query='set DateStyle to 'ISO''
conn=0xa24b670, query='set extra_float_digits to 2'
conn=0xa24b670, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0xa24b670, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0xa24b670, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0xa24b670, query='CREATE OR REPLACE FUNCTION median (float[]) RETURNS float AS '
x<-arg1
x<-as.numeric(as.character(x))
x<-na.omit(x)
median(x,na.rm=TRUE)'
LANGUAGE 'plr' STRICT;

CREATE OR REPLACE FUNCTION q10 (float[]) RETURNS float AS '
x<-arg1
x<-as.numeric(as.character(x))
x<-na.omit(x)
quantile(x,0.1,na.rm=TRUE)'
LANGUAGE 'plr' STRICT;

CREATE OR REPLACE FUNCTION q90 (float[]) RETURNS float AS '
x<-arg1
x<-as.numeric(as.character(x))
x<-na.omit(x)
quantile(x,0.9,na.rm=TRUE)'
LANGUAGE 'plr' STRICT;

CREATE OR REPLACE FUNCTION q75 (float[]) RETURNS float AS '
x<-arg1
x<-as.numeric(as.character(x))
x<-na.omit(x)
quantile(x,0.75,na.rm=TRUE)'
LANGUAGE 'plr' STRICT;

CREATE OR REPLACE FUNCTION q25 (float[]) RETURNS float AS '
x<-arg1
x<-as.numeric(as.character(x))
x<-na.omit(x)
quantile(x,0.25,na.rm=TRUE)'
LANGUAGE 'plr' STRICT;

CREATE OR REPLACE FUNCTION minimum (float[]) RETURNS float AS '
x<-arg1
x<-as.numeric(as.character(x))
x<-na.omit(x)
min(x,na.rm=TRUE)'
LANGUAGE 'plr' STRICT;

CREATE OR REPLACE FUNCTION maximum (float[]) RETURNS float AS '
x<-arg1
x<-as.numeric(as.character(x))
x<-na.omit(x)
max(x,na.rm=TRUE)'
LANGUAGE 'plr' STRICT;

CREATE OR REPLACE FUNCTION mean (float[]) RETURNS float AS '
x<-arg1
x<-as.numeric(as.character(x))
x<-na.omit(x)
mean(x,na.rm=TRUE)'
LANGUAGE 'plr' STRICT;

CREATE OR REPLACE FUNCTION sd (float[]) RETURNS float AS '
x<-arg1
x<-as.numeric(as.character(x))
x<-na.omit(x)
sd(x,na.rm=TRUE)'
LANGUAGE 'plr' STRICT;

CREATE OR REPLACE FUNCTION se (float[]) RETURNS float AS '
x<-arg1
x<-as.numeric(as.character(x))
x<-na.omit(x)
sd(x,na.rm=TRUE)/sqrt(length(x))'
LANGUAGE 'plr' STRICT;

CREATE OR REPLACE FUNCTION length (float[]) RETURNS float AS '
x<-arg1
x<-as.numeric(as.character(x))
x<-na.omit(x)
length(x)'
LANGUAGE 'plr' STRICT;

CREATE OR REPLACE FUNCTION PSuitable (float[],float[],float,float,float) RETURNS float AS '
x<-arg1
q<-arg2
depth<-arg3
ht<-arg4
tide<-arg5
depth<-depth+tide
x2<-q[x>=depth&x<=ht]
x2<-max(x2)-min(x2)
if(is.na(x2))x2<-0
if(x2==-Inf)x2<-0
x2'
LANGUAGE 'plr' STRICT;

'
conn=0xa3e5620, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0xa3e5620, query=' '
conn=0xa3e5620, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0xa3e5620, query='set DateStyle to 'ISO''
conn=0xa3e5620, query='set extra_float_digits to 2'
conn=0xa3e5620, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0xa3e5620, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0xa3e5620, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0xa3e5620, query='
                 drop table if exists grat;
                 create table grat as
                 select s.* from
                 (select
                  geom::geometry(polygon,3857),
                 st_area(st_transform(geom,4326)::geography) area_m2,
                 st_x(st_centroid(st_transform(geom,4326))) lon,
                 st_y(st_centroid(st_transform(geom,4326))) lat,
                 minimum(vals) min,
                 q10(vals) q10,
                 q25(vals) q25,
                 median(vals) median,
                 mean(vals) mean,
                 q75(vals) q75,
                 q90(vals) q90,
                 maximum(vals) max
                 from
                 (select st_envelope(st_tile(rast,30,30)) geom,
                 st_tile(rast,30,30) rast,
                 (st_dumpvalues(st_tile(rast,30,30))).valarray vals
                 from dem) d
                 ) s
                 where min>-10 and max < 10 and min <1000000000000;'
NOTICE from backend during send_query: 'NOTICE:  table "grat" does not exist, skipping'
conn=0xa3e5620, query='
ALTER TABLE grat ADD COLUMN rid BIGSERIAL PRIMARY KEY;
CREATE INDEX grat_gix ON grat USING GIST (geom);
ALTER TABLE grat ADD COLUMN psuitable numeric(3);
'
conn=0xa306400, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0xa306400, query=' '
conn=0xa306400, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0xa306400, query='set DateStyle to 'ISO''
conn=0xa306400, query='set extra_float_digits to 2'
conn=0xa306400, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0xa306400, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0xa306400, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0xa306400, query='update grat set psuitable = PSuitable(array[min,q10,q25,median,q75,q90,max],array[0,10,25,50,75,90,100],-0.4,0.4,0);'
conn=0xa12e8a0, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0xa12e8a0, query=' '
conn=0xa12e8a0, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0xa12e8a0, query='set DateStyle to 'ISO''
conn=0xa12e8a0, query='set extra_float_digits to 2'
conn=0xa12e8a0, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0xa12e8a0, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0xa12e8a0, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0xa12e8a0, query='create table tmp as
select g.*,
med median_biomass,
mn mean_biomass
from 
grat g,
(select 
t2.rid,
median((st_dumpvalues(st_union(st_clip(rast,geom)))).valarray) med,
mean((st_dumpvalues(st_union(st_clip(rast,geom)))).valarray) mn
from biomass t,
(select * from grat) t2
where st_intersects(rast,geom)
group by t2.rid) s
where s.rid=g.rid;
drop table grat;
ALTER TABLE tmp RENAME TO grat;
CREATE INDEX grat_gix ON grat USING GIST (geom);'
conn=0x9f38670, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0x9f38670, query=' '
conn=0x9f38670, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0x9f38670, query='set DateStyle to 'ISO''
conn=0x9f38670, query='set extra_float_digits to 2'
conn=0x9f38670, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0x9f38670, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0x9f38670, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0x9f38670, query='create table tmp as
select g.*,
med median_shootlength,
mn mean_shootlength
from 
grat g,
(select 
t2.rid,
median((st_dumpvalues(st_union(st_clip(rast,geom)))).valarray) med,
mean((st_dumpvalues(st_union(st_clip(rast,geom)))).valarray) mn
from shootlength t,
(select * from grat) t2
where st_intersects(rast,geom)
group by t2.rid) s
where s.rid=g.rid;
drop table grat;
ALTER TABLE tmp RENAME TO grat;
CREATE INDEX grat_gix ON grat USING GIST (geom);'
conn=0xa71da40, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0xa71da40, query=' '
conn=0xa71da40, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0xa71da40, query='set DateStyle to 'ISO''
conn=0xa71da40, query='set extra_float_digits to 2'
conn=0xa71da40, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0xa71da40, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0xa71da40, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0xa71da40, query='
drop table if exists tmp;
create table tmp as
select gg.*,s.station from
grat gg,
(select g.rid,min(station) station from 
grat g,
tide_regime t
where st_intersects(t.geom,g.geom)
group by rid,g.geom) s
where s.rid=gg.rid;
drop table grat;
ALTER TABLE tmp RENAME TO grat;
alter table grat add CONSTRAINT prec_pkey PRIMARY KEY(rid );
CREATE INDEX grat_gix ON grat USING GIST (geom);'
NOTICE from backend during send_query: 'NOTICE:  table "tmp" does not exist, skipping'
conn=0xa73aa80, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0xa73aa80, query=' '
conn=0xa73aa80, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0xa73aa80, query='set DateStyle to 'ISO''
conn=0xa73aa80, query='set extra_float_digits to 2'
conn=0xa73aa80, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0xa73aa80, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0xa73aa80, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0xa73aa80, query='
drop table if exists tmp;
create table tmp as
select gg.*,s.station from
grat gg,
(select g.rid,min(station) station from 
grat g,
tide_regime t
where st_intersects(t.geom,g.geom)
group by rid,g.geom) s
where s.rid=gg.rid;
drop table grat;
ALTER TABLE tmp RENAME TO grat;
alter table grat add CONSTRAINT prec_pkey PRIMARY KEY(rid );
CREATE INDEX grat_gix ON grat USING GIST (geom);'
NOTICE from backend during send_query: 'NOTICE:  table "tmp" does not exist, skipping'
ERROR from backend during send_query: 'ERROR:  column reference "station" is ambiguous at character 102'
STATEMENT ERROR: func=SC_execute, desc='(null)', errnum=7, errmsg='Error while executing the query'
                 ------------------------------------------------------------
                 hdbc=0xa73aa80, stmt=0x783ce90, result=0xa736c90
                 prepare=2, internal=0
                 bindings=(nil), bindings_allocated=0
                 parameters=(nil), parameters_allocated=0
                 statement_type=7, statement='
drop table if exists tmp;
create table tmp as
select gg.*,s.station from
grat gg,
(select g.rid,min(station) station from 
grat g,
tide_regime t
where st_intersects(t.geom,g.geom)
group by rid,g.geom) s
where s.rid=gg.rid;
drop table grat;
ALTER TABLE tmp RENAME TO grat;
alter table grat add CONSTRAINT prec_pkey PRIMARY KEY(rid );
CREATE INDEX grat_gix ON grat USING GIST (geom);'
                 stmt_with_params='
drop table if exists tmp;
create table tmp as
select gg.*,s.station from
grat gg,
(select g.rid,min(station) station from 
grat g,
tide_regime t
where st_intersects(t.geom,g.geom)
group by rid,g.geom) s
where s.rid=gg.rid;
drop table grat;
ALTER TABLE tmp RENAME TO grat;
alter table grat add CONSTRAINT prec_pkey PRIMARY KEY(rid );
CREATE INDEX grat_gix ON grat USING GIST (geom);'
                 data_at_exec=-1, current_exec_param=-1, put_data=0
                 currTuple=-1, current_col=-1, lobj_fd=-1
                 maxRows=0, rowset_size=1, keyset_size=0, cursor_type=0, scroll_concurrency=1
                 cursor_name='SQL_CUR0x783ce90'
                 ----------------QResult Info -------------------------------
                 fields=0x7825300, backend_tuples=(nil), tupleField=0, conn=(nil)
                 fetch_count=0, num_total_rows=0, num_fields=0, cursor='(NULL)'
                 message='ERROR:  column reference "station" is ambiguous at character 102', command='DROP TABLE', notice='NOTICE:  table "tmp" does not exist, skipping'
                 status=7, inTuples=0
CONN ERROR: func=SC_execute, desc='(null)', errnum=110, errmsg='ERROR:  column reference "station" is ambiguous at character 102'
            ------------------------------------------------------------
            henv=0x65b9ab0, conn=0xa73aa80, status=1, num_stmts=16
            sock=0x82db200, stmts=0x620c240, lobj_type=-999
            ---------------- Socket Info -------------------------------
            socket=23, reverse=0, errornumber=0, errormsg='(NULL)'
            buffer_in=175355344, buffer_out=175466032
            buffer_filled_in=1, buffer_filled_out=0, buffer_read_in=1
conn=0xa769db0, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0xa769db0, query=' '
conn=0xa769db0, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0xa769db0, query='set DateStyle to 'ISO''
conn=0xa769db0, query='set extra_float_digits to 2'
conn=0xa769db0, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0xa769db0, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0xa769db0, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0xa769db0, query='
  drop table if exists distances;
  create table distances as
  select s1.rid,s2.rid rid2,st_distance(s1.g,s2.g) dist_m from
  (select rid, (st_transform(geom,4326))::geography g from grat) s1,
  (select rid, (st_transform(geom,4326))::geography g from grat) s2;'
NOTICE from backend during send_query: 'NOTICE:  table "distances" does not exist, skipping'
conn=0xa79c8e0, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0xa79c8e0, query=' '
conn=0xa79c8e0, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0xa79c8e0, query='set DateStyle to 'ISO''
conn=0xa79c8e0, query='set extra_float_digits to 2'
conn=0xa79c8e0, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0xa79c8e0, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0xa79c8e0, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0xa79c8e0, query='
  drop table if exists centerdistances;
  create table centerdistances as
  select s1.rid,s2.rid rid2,st_distance(s1.g,s2.g) dist_m from
  (select rid, (st_transform(st_centroid(geom),4326))::geography g from grat) s1,
  (select rid, (st_transform(st_centroid(geom),4326))::geography g from grat) s2;'
NOTICE from backend during send_query: 'NOTICE:  table "centerdistances" does not exist, skipping'
conn=0xa79c8e0, PGAPI_Disconnect
conn=0xa769db0, PGAPI_Disconnect
conn=0xa73aa80, PGAPI_Disconnect
conn=0xa71da40, PGAPI_Disconnect
conn=0x9f38670, PGAPI_Disconnect
conn=0xa12e8a0, PGAPI_Disconnect
conn=0xa306400, PGAPI_Disconnect
conn=0xa3e5620, PGAPI_Disconnect
conn=0xa24b670, PGAPI_Disconnect
conn=0xa7723a0, PGAPI_Disconnect
conn=0xa741450, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0xa741450, query=' '
conn=0xa741450, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0xa741450, query='set DateStyle to 'ISO''
conn=0xa741450, query='set extra_float_digits to 2'
conn=0xa741450, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0xa741450, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0xa741450, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0xa741450, query='
drop table if exists tides;
create table tides
(
station integer,
name varchar(6),
time timestamp,
ht float
);'
NOTICE from backend during send_query: 'NOTICE:  table "tides" does not exist, skipping'
conn=0xa7878a0, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0xa7878a0, query=' '
conn=0xa7878a0, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0xa7878a0, query='set DateStyle to 'ISO''
conn=0xa7878a0, query='set extra_float_digits to 2'
conn=0xa7878a0, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0xa7878a0, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0xa7878a0, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0xa741450, PGAPI_Disconnect
conn=0xa7878a0, query='
drop table if exists climate;
create table climate
(
date date,
element varchar(6),
value float
);'
NOTICE from backend during send_query: 'NOTICE:  table "climate" does not exist, skipping'
conn=0xa742820, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0xa742820, query=' '
conn=0xa742820, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0xa742820, query='set DateStyle to 'ISO''
conn=0xa742820, query='set extra_float_digits to 2'
conn=0xa742820, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0xa742820, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0xa742820, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0xa742820, query='
drop table if exists clim;
create table clim as
select temp.date, wind.value avwind,tmin,tmax from
(select tmin.date,tmin.value tmin, tmax.value tmax from
( select * from climate where element = 'TMIN') tmin,
( select * from climate where element = 'TMAX') tmax
where tmin.date=tmax.date) temp,
( select * from climate where element = 'AWND') wind
where wind.date=temp.date'
NOTICE from backend during send_query: 'NOTICE:  table "clim" does not exist, skipping'
conn=0xec7f0b0, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0xec7f0b0, query=' '
conn=0xec7f0b0, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0xec7f0b0, query='set DateStyle to 'ISO''
conn=0xec7f0b0, query='set extra_float_digits to 2'
conn=0xec7f0b0, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0xec7f0b0, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0xec7f0b0, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0xec7f0b0, query='create view temp_view as select * from grat'
conn=0xa7878a0, PGAPI_Disconnect
conn=0xec7f0b0, query='drop view temp_view'
conn=0xadf3360, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0xadf3360, query=' '
conn=0xadf3360, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0xadf3360, query='set DateStyle to 'ISO''
conn=0xadf3360, query='set extra_float_digits to 2'
conn=0xadf3360, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0xadf3360, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0xadf3360, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0xadf3360, query='select * from centerdistances'
    [ fetched 305809 rows ]
conn=0xadf3360, query='select * from tides'
    [ fetched 70176 rows ]
conn=0xadf3360, query='select * from clim'
    [ fetched 12027 rows ]
conn=0xec7f0b0, PGAPI_Disconnect
conn=0xa742820, PGAPI_Disconnect
conn=0xadf3360, query='select * from grat'
    [ fetched 553 rows ]
conn=0xadf3360, query='select st_X(sc_centroid(geom)) x, * from grat'
ERROR from backend during send_query: 'ERROR:  function sc_centroid(geometry) does not exist at character 13'
STATEMENT ERROR: func=SC_execute, desc='(null)', errnum=7, errmsg='Error while executing the query'
                 ------------------------------------------------------------
                 hdbc=0xadf3360, stmt=0x7b9d530, result=0x103bc870
                 prepare=2, internal=0
                 bindings=(nil), bindings_allocated=0
                 parameters=(nil), parameters_allocated=0
                 statement_type=0, statement='select st_X(sc_centroid(geom)) x, * from grat'
                 stmt_with_params='select st_X(sc_centroid(geom)) x, * from grat'
                 data_at_exec=-1, current_exec_param=-1, put_data=0
                 currTuple=-1, current_col=-1, lobj_fd=-1
                 maxRows=0, rowset_size=1, keyset_size=0, cursor_type=0, scroll_concurrency=1
                 cursor_name='SQL_CUR0x7b9d530'
                 ----------------QResult Info -------------------------------
                 fields=0x15a6d240, backend_tuples=(nil), tupleField=0, conn=(nil)
                 fetch_count=0, num_total_rows=0, num_fields=0, cursor='(NULL)'
                 message='ERROR:  function sc_centroid(geometry) does not exist at character 13', command='(NULL)', notice='(NULL)'
                 status=7, inTuples=0
CONN ERROR: func=SC_execute, desc='(null)', errnum=110, errmsg='ERROR:  function sc_centroid(geometry) does not exist at character 13'
            ------------------------------------------------------------
            henv=0xa2ac4f0, conn=0xadf3360, status=1, num_stmts=16
            sock=0xa27c120, stmts=0x820fe40, lobj_type=-999
            ---------------- Socket Info -------------------------------
            socket=16, reverse=0, errornumber=0, errormsg='(NULL)'
            buffer_in=191464928, buffer_out=191469040
            buffer_filled_in=73, buffer_filled_out=0, buffer_read_in=73
conn=0x118a4860, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0x118a4860, query=' '
conn=0x118a4860, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0x118a4860, query='set DateStyle to 'ISO''
conn=0x118a4860, query='set extra_float_digits to 2'
conn=0x118a4860, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0x118a4860, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0x118a4860, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0x118a4860, query='create view temp_view as select * from grat'
conn=0x118a4860, query='drop view temp_view'
conn=0xadf3360, query='select 
                st_X(sc_centroid(geom)) x, 
                st_y(sc_centroid(geom)) y,
                * from grat'
ERROR from backend during send_query: 'ERROR:  function sc_centroid(geometry) does not exist at character 30'
STATEMENT ERROR: func=SC_execute, desc='(null)', errnum=7, errmsg='Error while executing the query'
                 ------------------------------------------------------------
                 hdbc=0xadf3360, stmt=0x80d1220, result=0x1492e9b0
                 prepare=2, internal=0
                 bindings=(nil), bindings_allocated=0
                 parameters=(nil), parameters_allocated=0
                 statement_type=0, statement='select 
                st_X(sc_centroid(geom)) x, 
                st_y(sc_centroid(geom)) y,
                * from grat'
                 stmt_with_params='select 
                st_X(sc_centroid(geom)) x, 
                st_y(sc_centroid(geom)) y,
                * from grat'
                 data_at_exec=-1, current_exec_param=-1, put_data=0
                 currTuple=-1, current_col=-1, lobj_fd=-1
                 maxRows=0, rowset_size=1, keyset_size=0, cursor_type=0, scroll_concurrency=1
                 cursor_name='SQL_CUR0x80d1220'
                 ----------------QResult Info -------------------------------
                 fields=0x12d22a40, backend_tuples=(nil), tupleField=0, conn=(nil)
                 fetch_count=0, num_total_rows=0, num_fields=0, cursor='(NULL)'
                 message='ERROR:  function sc_centroid(geometry) does not exist at character 30', command='(NULL)', notice='(NULL)'
                 status=7, inTuples=0
CONN ERROR: func=SC_execute, desc='(null)', errnum=110, errmsg='ERROR:  function sc_centroid(geometry) does not exist at character 13'
            ------------------------------------------------------------
            henv=0xa2ac4f0, conn=0xadf3360, status=1, num_stmts=16
            sock=0xa27c120, stmts=0x820fe40, lobj_type=-999
            ---------------- Socket Info -------------------------------
            socket=16, reverse=0, errornumber=0, errormsg='(NULL)'
            buffer_in=191464928, buffer_out=191469040
            buffer_filled_in=1, buffer_filled_out=0, buffer_read_in=1
conn=0xadf3360, query='select 
                st_X(sc_centroid(geom)) x, 
                st_y(sc_centroid(geom)) y,
                * from grat'
ERROR from backend during send_query: 'ERROR:  function sc_centroid(geometry) does not exist at character 30'
STATEMENT ERROR: func=SC_execute, desc='(null)', errnum=7, errmsg='Error while executing the query'
                 ------------------------------------------------------------
                 hdbc=0xadf3360, stmt=0x7b9d530, result=0xa773640
                 prepare=2, internal=0
                 bindings=(nil), bindings_allocated=0
                 parameters=(nil), parameters_allocated=0
                 statement_type=0, statement='select 
                st_X(sc_centroid(geom)) x, 
                st_y(sc_centroid(geom)) y,
                * from grat'
                 stmt_with_params='select 
                st_X(sc_centroid(geom)) x, 
                st_y(sc_centroid(geom)) y,
                * from grat'
                 data_at_exec=-1, current_exec_param=-1, put_data=0
                 currTuple=-1, current_col=-1, lobj_fd=-1
                 maxRows=0, rowset_size=1, keyset_size=0, cursor_type=0, scroll_concurrency=1
                 cursor_name='SQL_CUR0x7b9d530'
                 ----------------QResult Info -------------------------------
                 fields=0x7793ce0, backend_tuples=(nil), tupleField=0, conn=(nil)
                 fetch_count=0, num_total_rows=0, num_fields=0, cursor='(NULL)'
                 message='ERROR:  function sc_centroid(geometry) does not exist at character 30', command='(NULL)', notice='(NULL)'
                 status=7, inTuples=0
CONN ERROR: func=SC_execute, desc='(null)', errnum=110, errmsg='ERROR:  function sc_centroid(geometry) does not exist at character 13'
            ------------------------------------------------------------
            henv=0xa2ac4f0, conn=0xadf3360, status=1, num_stmts=16
            sock=0xa27c120, stmts=0x820fe40, lobj_type=-999
            ---------------- Socket Info -------------------------------
            socket=16, reverse=0, errornumber=0, errormsg='(NULL)'
            buffer_in=191464928, buffer_out=191469040
            buffer_filled_in=1, buffer_filled_out=0, buffer_read_in=1
conn=0x1262f740, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0x1262f740, query=' '
conn=0x1262f740, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0x1262f740, query='set DateStyle to 'ISO''
conn=0x1262f740, query='set extra_float_digits to 2'
conn=0x1262f740, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0x1262f740, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0x1262f740, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0x1262f740, query='select 
                st_X(sc_centroid(geom)) x, 
                st_y(sc_centroid(geom)) y,
                * from grat'
ERROR from backend during send_query: 'ERROR:  function sc_centroid(geometry) does not exist at character 30'
STATEMENT ERROR: func=SC_execute, desc='(null)', errnum=7, errmsg='Error while executing the query'
                 ------------------------------------------------------------
                 hdbc=0x1262f740, stmt=0x7b9d530, result=0x11de09f0
                 prepare=2, internal=0
                 bindings=(nil), bindings_allocated=0
                 parameters=(nil), parameters_allocated=0
                 statement_type=0, statement='select 
                st_X(sc_centroid(geom)) x, 
                st_y(sc_centroid(geom)) y,
                * from grat'
                 stmt_with_params='select 
                st_X(sc_centroid(geom)) x, 
                st_y(sc_centroid(geom)) y,
                * from grat'
                 data_at_exec=-1, current_exec_param=-1, put_data=0
                 currTuple=-1, current_col=-1, lobj_fd=-1
                 maxRows=0, rowset_size=1, keyset_size=0, cursor_type=0, scroll_concurrency=1
                 cursor_name='SQL_CUR0x7b9d530'
                 ----------------QResult Info -------------------------------
                 fields=0x4e86dc0, backend_tuples=(nil), tupleField=0, conn=(nil)
                 fetch_count=0, num_total_rows=0, num_fields=0, cursor='(NULL)'
                 message='ERROR:  function sc_centroid(geometry) does not exist at character 30', command='(NULL)', notice='(NULL)'
                 status=7, inTuples=0
CONN ERROR: func=SC_execute, desc='(null)', errnum=110, errmsg='ERROR:  function sc_centroid(geometry) does not exist at character 30'
            ------------------------------------------------------------
            henv=0xa2ac4f0, conn=0x1262f740, status=1, num_stmts=16
            sock=0x11cd9320, stmts=0x1142a780, lobj_type=-999
            ---------------- Socket Info -------------------------------
            socket=18, reverse=0, errornumber=0, errormsg='(NULL)'
            buffer_in=274660464, buffer_out=228662768
            buffer_filled_in=1, buffer_filled_out=0, buffer_read_in=1
conn=0x1262f740, query='select 
                st_X(st_centroid(geom)) x, 
                st_y(sc_centroid(geom)) y,
                * from grat'
ERROR from backend during send_query: 'ERROR:  function sc_centroid(geometry) does not exist at character 74'
STATEMENT ERROR: func=SC_execute, desc='(null)', errnum=7, errmsg='Error while executing the query'
                 ------------------------------------------------------------
                 hdbc=0x1262f740, stmt=0xf9c0cf0, result=0x11deddb0
                 prepare=2, internal=0
                 bindings=(nil), bindings_allocated=0
                 parameters=(nil), parameters_allocated=0
                 statement_type=0, statement='select 
                st_X(st_centroid(geom)) x, 
                st_y(sc_centroid(geom)) y,
                * from grat'
                 stmt_with_params='select 
                st_X(st_centroid(geom)) x, 
                st_y(sc_centroid(geom)) y,
                * from grat'
                 data_at_exec=-1, current_exec_param=-1, put_data=0
                 currTuple=-1, current_col=-1, lobj_fd=-1
                 maxRows=0, rowset_size=1, keyset_size=0, cursor_type=0, scroll_concurrency=1
                 cursor_name='SQL_CUR0xf9c0cf0'
                 ----------------QResult Info -------------------------------
                 fields=0x9ed9d10, backend_tuples=(nil), tupleField=0, conn=(nil)
                 fetch_count=0, num_total_rows=0, num_fields=0, cursor='(NULL)'
                 message='ERROR:  function sc_centroid(geometry) does not exist at character 74', command='(NULL)', notice='(NULL)'
                 status=7, inTuples=0
CONN ERROR: func=SC_execute, desc='(null)', errnum=110, errmsg='ERROR:  function sc_centroid(geometry) does not exist at character 30'
            ------------------------------------------------------------
            henv=0xa2ac4f0, conn=0x1262f740, status=1, num_stmts=16
            sock=0x11cd9320, stmts=0x1142a780, lobj_type=-999
            ---------------- Socket Info -------------------------------
            socket=18, reverse=0, errornumber=0, errormsg='(NULL)'
            buffer_in=274660464, buffer_out=228662768
            buffer_filled_in=73, buffer_filled_out=0, buffer_read_in=73
conn=0x1262f740, query='select 
                st_X(st_centroid(geom)) x, 
                st_y(st_centroid(geom)) y,
                * from grat'
    [ fetched 553 rows ]
conn=0x1204ab50, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0x1204ab50, query=' '
conn=0x1204ab50, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0x1204ab50, query='set DateStyle to 'ISO''
conn=0x1204ab50, query='set extra_float_digits to 2'
conn=0x1204ab50, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0x1204ab50, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0x1204ab50, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0x124927d0, PGAPI_DriverConnect( in)='DSN=brant', fDriverCompletion=0
DSN info: DSN='brant',server='postgis',port='',dbase='brant',user='docker',passwd='xxxxx'
          onlyread='0',protocol='8.2.5',showoid='',fakeoidindex='',showsystable=''
          conn_settings='(null)', conn_encoding='(null)'
          translation_dll='',translation_option=''
Driver Version='09.03.0300,201405140001'
Global Options: fetch=100, socket=4096, unknown_sizes=0, max_varchar_size=255, max_longvarchar_size=8190
                disable_optimizer=0, ksqo=1, unique_index=1, use_declarefetch=0
                text_as_longvarchar=1, unknowns_as_longvarchar=0, bools_as_char=1 NAMEDATALEN=64
                extra_systable_prefixes='dd_;', conn_settings='(null)' conn_encoding=''
conn=0x124927d0, query=' '
conn=0x124927d0, query='select version()'
    [ fetched 1 rows ]
    [ PostgreSQL version string = 'PostgreSQL 9.5.5 on x86_64-pc-linux-gnu, compiled by gcc (Debian 4.9.2-10) 4.9.2, 64-bit' ]
    [ PostgreSQL version number = '9.5' ]
conn=0x124927d0, query='set DateStyle to 'ISO''
conn=0x124927d0, query='set extra_float_digits to 2'
conn=0x124927d0, query='select oid, typbasetype from pg_type where typname = 'lo''
    [ fetched 0 rows ]
    [ Large Object oid = -999 ]
conn=0x124927d0, query='select pg_client_encoding()'
    [ fetched 1 rows ]
    [ Client encoding = 'SQL_ASCII' (code = 0) ]
conn=0x124927d0, PGAPI_DriverConnect(out)='DSN=brant;DATABASE=brant;SERVER=postgis;PORT=5432;UID=docker;PWD=docker;SSLmode=disable;ReadOnly=0;Protocol=8.2.5;FakeOidIndex=0;ShowOidColumn=0;RowVersioning=0;ShowSystemTables=0;ConnSettings=;Fetch=100;Socket=4096;UnknownSizes=0;MaxVarcharSize=255;MaxLongVarcharSize=8190;Debug=0;CommLog=1;Optimizer=0;Ksqo=1;UseDeclareFetch=0;TextAsLongVarchar=1;UnknownsAsLongVarchar=0;BoolsAsChar=1;Parse=0;CancelAsFreeStmt=0;ExtraSysTablePrefixes=dd_;;LFConversion=0;UpdatableCursors=1;DisallowPremature=0;TrueIsMinus1=0;BI=0;ByteaAsLongVarBinary=0;UseServerSidePrepare=1;LowerCaseIdentifier=0;'
conn=0x124927d0, query='create view temp_view as select * from grat'
conn=0x1262f740, PGAPI_Disconnect
conn=0x118a4860, PGAPI_Disconnect
conn=0xadf3360, PGAPI_Disconnect
conn=0x124927d0, query='drop view temp_view'
conn=0x1204ab50, query='select 
                st_X(st_centroid(geom)) x, 
                st_y(st_centroid(geom)) y,
                * from grat'
    [ fetched 553 rows ]
conn=0x1204ab50, query='select * from centerdistances'
    [ fetched 305809 rows ]
conn=0x1204ab50, query='select * from tides'
    [ fetched 70176 rows ]
conn=0x1204ab50, query='select * from clim'
    [ fetched 12027 rows ]
conn=0x124927d0, PGAPI_Disconnect
conn=0x1204ab50, PGAPI_Disconnect
